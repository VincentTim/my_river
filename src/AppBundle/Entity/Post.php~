<?php

namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;

/**
 * Post
 *
 * @ORM\Table(name="post")
 * @ORM\Entity(repositoryClass="AppBundle\Repository\PostRepository")
 * @UniqueEntity("title")
 */
class Post
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     * @Assert\NotBlank()
     * @Assert\Length(
     *      min = 2,
     *      max = 50,
     *      minMessage = "The title must be at least {{ limit }} characters long",
     *      maxMessage = "The title cannot be longer than {{ limit }} characters"
     * )
     * @ORM\Column(name="title", type="string", length=255, unique=true)
     */
    private $title;
    
    /**
     * @var string
     * @ORM\Column(name="slug", type="string", length=255, unique=true)
     */
    private $slug;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="creation", type="datetime")
     */
    private $creation;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="modification", type="datetime")
     */
    private $modification;

    /**
     * @var string
     * @Assert\NotBlank()
     * @ORM\Column(name="description", type="text")
     */
    private $description;

    /**
     * @var integer
     * @ORM\Column(name="view", type="integer", nullable=true, options={"default"=0})
     */
    private $view;
    
    /**
     * @var boolean
     * @ORM\Column(name="publish", type="boolean", nullable=false, options={"default"=0})
     */
    private $publish;

    /**
     *
     * @ORM\ManyToMany(targetEntity="Collection", inversedBy="posts")
     *
     **/
    private $collections;

    /**
     *
     * @ORM\OneToMany(targetEntity="File", mappedBy="post", cascade={"persist", "remove"})
     **/
    private $files;

    /**
     *
     * @ORM\ManyToOne(targetEntity="Category", inversedBy="posts")
     **/
    private $category;
    
    /**
     *
     * @ORM\ManyToOne(targetEntity="Place", inversedBy="posts")
     *
     **/
    private $place;


    
}
